version: '3.8'

x-app: &default-app
  build: .
  restart: always

x-env: &env
  env_file:
    - .dev.env  

services:

  db:
    environment:
       - POSTGRES_HOST=${DB_HOST}
       - POSTGRES_PORT=${DB_PORT}
       - POSTGRES_DB=${DB_NAME}
       - POSTGRES_USER=${DB_USER}
       - POSTGRES_PASSWORD=${DB_PASS}
    container_name: notify_db
    image: postgres:15.3-alpine
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -d ${DB_NAME} -U ${DB_USER}
      interval: 10s
      timeout: 5s 
      retries: 5
    volumes:
      - notify_app_pg_data:/var/lib/postgresql/data

  
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabb
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  celery:
    <<: [*default-app, *env]
    command: celery -A tasks.tasks:celery_app worker --loglevel=INFO
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy


    

  api:
    <<: [*default-app, *env]
    container_name: notify_app
    command: docker/start.sh
    ports:
      - 3000:8000
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

    volumes:
      - .:/app

volumes:
  notify_app_pg_data:

  

